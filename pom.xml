<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.mau</groupId>
	<artifactId>hireme</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>hireme</name>
	<description>My API</description>
	<properties>
		<java.version>8</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Maybe to be considered later
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html#webflux-performance
		Performance has many characteristics and meanings. Reactive and non-blocking generally
		do not make applications run faster. They can, in some cases, (for example, if using
		the WebClient to run remote calls in parallel). On the whole, it requires more work to
		do things the non-blocking way and that can slightly increase the required processing time.
		The key expected benefit of reactive and non-blocking is the ability to scale with a small,
		fixed number of threads and less memory. That makes applications more resilient under load,
		because they scale in a more predictable way. In order to observe those benefits, however,
		you need to have some latency (including a mix of slow and unpredictable network I/O).
		That is where the reactive stack begins to show its strengths, and the differences can be dramatic.
		-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.5.4</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
